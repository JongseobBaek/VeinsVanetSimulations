%description:
numberOfBits should be incremented 
when new message arrives with the bit length of message

%includes:
#include<TestMetrics.h>
#include <INETDefs.h>


%file: TestMetrics.h
#ifndef __TESTMETRICS_H
#define __TESTMETRICS_H

#include <../../../src/Metrics.h>

class TestMetrics : public Metrics
{       
	public:
		long testUpdateNumBits(long numberOfBits, cPacket* packet){
			return Metrics::updateNumberOfBits(numberOfBits, packet);
		};
};
#endif
  
%file: package.ned
package vanets.tests.work.MetricsTests;
@namespace(MetricsTests);

%file: test.ned
package vanets.tests.work.MetricsTests;

simple Test
{
    @isNetwork(true);
}

%activity:

long currentNumBits = 9; 
long bitLength = 1; 
long expected = 10;
std::string outputDescription = "numberOfBits: "; 

cPacket *pkt = new cPacket();
cMessage *message = pkt; // Valid   cPacket is a descendant of cMessage
cPacket *packet = dynamic_cast<cPacket*>(message);
packet->setBitLength(bitLength);

TestMetrics* metrics = new TestMetrics(); 
long numberOfBits = metrics->testUpdateNumBits(currentNumBits, packet); 


ev <<outputDescription << numberOfBits ; 
std::cout<<"Expected: "<< outputDescription << expected <<std::endl;
std::cout<<"Actual: "<<std::endl;

delete pkt;
delete metrics;


%contains: stdout
numberOfBits: 10
